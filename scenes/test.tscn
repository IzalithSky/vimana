[gd_scene load_steps=17 format=4 uid="uid://cyuibyvdt6una"]

[ext_resource type="Script" uid="uid://ciydki5nbaqxo" path="res://scenes/test.gd" id="1_iyx0m"]
[ext_resource type="Script" uid="uid://cu5pn655aha13" path="res://objects/common/fp_camera_holder.gd" id="3_at5dv"]
[ext_resource type="Script" uid="uid://diotgcgm0qcsn" path="res://objects/radar/radar_target.gd" id="4_j5jx5"]
[ext_resource type="Shader" uid="uid://b30jy27kjrgma" path="res://objects/vehicles/g_color_rect.gdshader" id="4_jcd4p"]
[ext_resource type="Script" uid="uid://ct1jhkyov3ta7" path="res://scenes/test_target_1.gd" id="4_lpvoh"]
[ext_resource type="Texture2D" uid="uid://262c1fhqd110" path="res://textures/kloppenheim_05_puresky_1k.hdr" id="5_j5jx5"]
[ext_resource type="Script" uid="uid://cfr6sfdj27xqg" path="res://objects/radar/radar.gd" id="5_yk7ts"]
[ext_resource type="PackedScene" uid="uid://bnqlnpxb47hb" path="res://objects/common/target_marker.tscn" id="7_uacia"]

[sub_resource type="PanoramaSkyMaterial" id="PanoramaSkyMaterial_lpvoh"]
panorama = ExtResource("5_j5jx5")

[sub_resource type="Sky" id="Sky_85mci"]
sky_material = SubResource("PanoramaSkyMaterial_lpvoh")

[sub_resource type="Environment" id="Environment_at5dv"]
background_mode = 2
sky = SubResource("Sky_85mci")
glow_enabled = true
fog_enabled = true
fog_light_color = Color(0.605738, 0.825918, 0.994554, 1)
fog_light_energy = 0.3
fog_density = 0.0001
fog_sky_affect = 0.8
fog_depth_end = 10000.0

[sub_resource type="ShaderMaterial" id="ShaderMaterial_uacia"]
shader = ExtResource("4_jcd4p")
shader_parameter/radius = 0.5

[sub_resource type="GDScript" id="GDScript_jcd4p"]
script/source = "class_name RadarEchoTracker
extends Node3D

@export var radar: Radar
@export var camera: Camera3D
@export var marker_scene: PackedScene
@export var lock_time_sec: float = 1.0
@export var show_markers: bool = true

var locked_target: RadarTarget = null
var _lock_candidate: RadarTarget = null
var _lock_timer: float = 0.0
var _markers: Dictionary = {}

func _process(delta: float) -> void:
	var radar_targets: Array[RadarTarget] = radar.get_targets()

	var best: RadarTarget = null
	var best_angle: float = INF
	if camera != null:
		var cam_dir: Vector3 = -camera.global_transform.basis.z
		for t in radar_targets:
			if not is_instance_valid(t):
				continue
			var to_target: Vector3 = (t.global_position - camera.global_position).normalized()
			var angle: float = acos(cam_dir.dot(to_target))
			if angle < best_angle:
				best_angle = angle
				best = t

	if best == _lock_candidate:
		_lock_timer += delta
		if _lock_timer >= lock_time_sec:
			locked_target = _lock_candidate
	else:
		_lock_candidate = best
		_lock_timer = 0.0
		locked_target = null

	_update_visuals(radar_targets)

func _update_visuals(visible_targets: Array[RadarTarget]) -> void:
	if show_markers:
		_update_markers(visible_targets)
	else:
		_clear_all_markers()

func _update_markers(visible_targets: Array[RadarTarget]) -> void:
	var live: Array[int] = []
	
	for t in visible_targets:
		if not is_instance_valid(t):
			continue
		var id: int = t.get_instance_id()
		live.append(id)
	
		var marker = _markers.get(id, null)
		if marker == null and marker_scene != null:
			marker = marker_scene.instantiate()
			if marker != null:
				add_child(marker)
				_markers[id] = marker
		if marker != null:
			marker.global_position = t.global_position
			marker.radar()
			marker.clear()
	
	if locked_target != null:
		var id: int = locked_target.get_instance_id()
		var marker = _markers.get(id, null)
		if marker == null and marker_scene != null:
			marker = marker_scene.instantiate()
			if marker != null:
				add_child(marker)
				_markers[id] = marker
		if marker != null:
			marker.global_position = locked_target.global_position
			marker.radar()
			marker.set_locked()
		if id not in live:
			live.append(id)

	for id in _markers.keys():
		if id not in live:
			if is_instance_valid(_markers[id]):
				_markers[id].queue_free()
			_markers.erase(id)


func _clear_all_markers() -> void:
	for m in _markers.values():
		m.queue_free()
	_markers.clear()
"

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_j5jx5"]
data = PackedVector3Array(-100, -100, 0.5, -100, -100, -0.5, -100, 100, -0.5, 100, -100, -0.5, -100, -100, -0.5, -100, -100, 0.5, -100, 100, -0.5, -100, -100, -0.5, 100, -100, -0.5, -100, 100, -0.5, -100, 100, 0.5, -100, -100, 0.5, -100, -100, 0.5, -100, 100, 0.5, 100, 100, 0.5, 100, 100, 0.5, -100, 100, 0.5, -100, 100, -0.5, -100, -100, 0.5, 100, -100, 0.5, 100, -100, -0.5, 100, 100, 0.5, 100, -100, 0.5, -100, -100, 0.5, 100, -100, -0.5, 100, -100, 0.5, 100, 100, 0.5, 100, -100, -0.5, 100, 100, -0.5, -100, 100, -0.5, -100, 100, -0.5, 100, 100, -0.5, 100, 100, 0.5, 100, 100, 0.5, 100, 100, -0.5, 100, -100, -0.5)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_j5jx5"]
albedo_color = Color(0.115148, 0.281356, 0.100276, 1)

[sub_resource type="ArrayMesh" id="ArrayMesh_j5jx5"]
_surfaces = [{
"aabb": AABB(-100, -100, -0.5, 200, 200, 1),
"attribute_data": PackedByteArray("AACAPwAAgD8AAIA/AAAAAAAAAAAAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAAAAAACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAIA/"),
"format": 34359738391,
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 36,
"vertex_data": PackedByteArray("AADIwgAAyMIAAAA/AADIwgAAyMIAAAC/AADIwgAAyEIAAAC/AADIQgAAyMIAAAC/AADIwgAAyMIAAAC/AADIwgAAyMIAAAA/AADIwgAAyEIAAAC/AADIwgAAyMIAAAC/AADIQgAAyMIAAAC/AADIwgAAyEIAAAC/AADIwgAAyEIAAAA/AADIwgAAyMIAAAA/AADIwgAAyMIAAAA/AADIwgAAyEIAAAA/AADIQgAAyEIAAAA/AADIQgAAyEIAAAA/AADIwgAAyEIAAAA/AADIwgAAyEIAAAC/AADIwgAAyMIAAAA/AADIQgAAyMIAAAA/AADIQgAAyMIAAAC/AADIQgAAyEIAAAA/AADIQgAAyMIAAAA/AADIwgAAyMIAAAA/AADIQgAAyMIAAAC/AADIQgAAyMIAAAA/AADIQgAAyEIAAAA/AADIQgAAyMIAAAC/AADIQgAAyEIAAAC/AADIwgAAyEIAAAC/AADIwgAAyEIAAAC/AADIQgAAyEIAAAC/AADIQgAAyEIAAAA/AADIQgAAyEIAAAA/AADIQgAAyEIAAAC/AADIQgAAyMIAAAC/AAD/f/9//n8AAP9//3/+fwAA/3//f/5//38AAP//AAD/fwAA//8AAP9/AAD//wAA/////wAA/z//////AAD/P/////8AAP8/AAD/f/9//n8AAP9//3/+fwAA/3//f/5//3//fwAA/z//f/9/AAD/P/9//38AAP8//3//////AAD/f/////8AAP9//////wAA/38AAP//AAD/fwAA//8AAP9/AAD//wAA/3//fwAA/z//f/9/AAD/P/9//38AAP8/////f/9//n////9//3/+f////3//f/5//////wAA/z//////AAD/P/////8AAP8//3//////AAD/f/////8AAP9//////wAA////f/9//n////9//3/+f////3//f/5/")
}]

[node name="Node3D" type="Node3D"]
script = ExtResource("1_iyx0m")

[node name="env" type="Node3D" parent="."]

[node name="WorldEnvironment" type="WorldEnvironment" parent="env"]
environment = SubResource("Environment_at5dv")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="env"]
transform = Transform3D(0.803192, 0.303667, -0.512513, 0, 0.860324, 0.509747, 0.59572, -0.409425, 0.691005, 0, 0, 0)
shadow_enabled = true

[node name="FPCameraHolder" type="Node3D" parent="." node_paths=PackedStringArray("fps_label")]
transform = Transform3D(1, -1.86265e-09, -3.72529e-09, -9.31323e-10, 1, 0, 0, 0, 1, 1.3319, 3.58332, 10)
script = ExtResource("3_at5dv")
fps_label = NodePath("Camera3D/CanvasLayer1/HBoxContainer/VBoxContainer/FpsLabel")
zoomed_fov = 25.0
zoom_as_toggle = true

[node name="Camera3D" type="Camera3D" parent="FPCameraHolder"]
unique_name_in_owner = true
fov = 45.0
near = 0.01

[node name="CanvasLayer1" type="CanvasLayer" parent="FPCameraHolder/Camera3D"]

[node name="DamageColorRect" type="ColorRect" parent="FPCameraHolder/Camera3D/CanvasLayer1"]
material = SubResource("ShaderMaterial_uacia")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0, 0, 0, 0)

[node name="HBoxContainer" type="HBoxContainer" parent="FPCameraHolder/Camera3D/CanvasLayer1"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="VBoxContainer2" type="VBoxContainer" parent="FPCameraHolder/Camera3D/CanvasLayer1/HBoxContainer"]
layout_mode = 2

[node name="filler" type="Label" parent="FPCameraHolder/Camera3D/CanvasLayer1/HBoxContainer/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 6

[node name="HpLabel" type="Label" parent="FPCameraHolder/Camera3D/CanvasLayer1/HBoxContainer/VBoxContainer2"]
layout_mode = 2
theme_override_colors/font_color = Color(0.486275, 0.988235, 0, 1)
text = "111"

[node name="filler" type="Label" parent="FPCameraHolder/Camera3D/CanvasLayer1/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="VBoxContainer" type="VBoxContainer" parent="FPCameraHolder/Camera3D/CanvasLayer1/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 4

[node name="FpsLabel" type="Label" parent="FPCameraHolder/Camera3D/CanvasLayer1/HBoxContainer/VBoxContainer"]
layout_mode = 2
theme_override_colors/font_color = Color(0.486275, 0.988235, 0, 1)
text = "111"

[node name="filler" type="Label" parent="FPCameraHolder/Camera3D/CanvasLayer1/HBoxContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 6

[node name="LegendLabel" type="Label" parent="FPCameraHolder/Camera3D/CanvasLayer1/HBoxContainer/VBoxContainer"]
layout_mode = 2
theme_override_colors/font_color = Color(0.486275, 0.988235, 0, 1)
theme_override_font_sizes/font_size = 10
text = "W/S: Pitch
A/D: Roll
Q/E: Yaw
Shift/Space: Throttle
C/Scroll: Flares
G: AoA Limiter
M2: Missile
Mouse: Freelook
Z: Zoom
F: Center Camera"

[node name="radar" type="CSGBox3D" parent="FPCameraHolder/Camera3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, -4)
script = ExtResource("5_yk7ts")
angular_bin_size_deg = 25.0

[node name="RadarEchoTracker" type="Node3D" parent="FPCameraHolder/Camera3D/radar" node_paths=PackedStringArray("radar", "camera")]
script = SubResource("GDScript_jcd4p")
radar = NodePath("..")
camera = NodePath("../..")
marker_scene = ExtResource("7_uacia")
metadata/_custom_type_script = "uid://squqqv8qatax"

[node name="target1" type="CSGBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -333)

[node name="RadarTarget" type="Node3D" parent="target1"]
script = ExtResource("4_j5jx5")
metadata/_custom_type_script = "uid://diotgcgm0qcsn"

[node name="target2" type="CSGBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -333)
script = ExtResource("4_lpvoh")
amplitude = 10.0
speed = 13.0

[node name="RadarTarget" type="Node3D" parent="target2"]
script = ExtResource("4_j5jx5")
metadata/_custom_type_script = "uid://diotgcgm0qcsn"

[node name="terrain" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -344.537)
collision_layer = 9
collision_mask = 0

[node name="CSGBakedCollisionShape3D" type="CollisionShape3D" parent="terrain"]
shape = SubResource("ConcavePolygonShape3D_j5jx5")

[node name="CSGBakedMeshInstance3D" type="MeshInstance3D" parent="terrain"]
material_override = SubResource("StandardMaterial3D_j5jx5")
mesh = SubResource("ArrayMesh_j5jx5")
skeleton = NodePath("../..")

[node name="RayCast3D" type="RayCast3D" parent="terrain"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0.429608, 0.796104)
collision_mask = 8
collide_with_areas = true
collide_with_bodies = false

[node name="target3" type="CSGBox3D" parent="."]
transform = Transform3D(0.122839, 0, 0.992427, 0, 1, 0, -0.992427, 0, 0.122839, -2263.59, 0, 813.78)

[node name="RadarTarget" type="Node3D" parent="target3"]
script = ExtResource("4_j5jx5")
metadata/_custom_type_script = "uid://diotgcgm0qcsn"

[node name="target4" type="CSGBox3D" parent="."]
transform = Transform3D(0.122839, 0, 0.992427, 0, 1, 0, -0.992427, 0, 0.122839, -2263.59, 0, 626.998)

[node name="RadarTarget" type="Node3D" parent="target4"]
script = ExtResource("4_j5jx5")
metadata/_custom_type_script = "uid://diotgcgm0qcsn"

[node name="terrain2" type="Area3D" parent="."]
transform = Transform3D(0.122839, 0, 0.992427, 0, 1, 0, -0.992427, 0, 0.122839, -2897.71, 0, 636.922)
collision_layer = 9
collision_mask = 0

[node name="CSGBakedCollisionShape3D" type="CollisionShape3D" parent="terrain2"]
shape = SubResource("ConcavePolygonShape3D_j5jx5")

[node name="CSGBakedMeshInstance3D" type="MeshInstance3D" parent="terrain2"]
material_override = SubResource("StandardMaterial3D_j5jx5")
mesh = SubResource("ArrayMesh_j5jx5")
skeleton = NodePath("../..")

[node name="RayCast3D" type="RayCast3D" parent="terrain2"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0.429608, 0.796104)
collision_mask = 8
collide_with_areas = true
collide_with_bodies = false
